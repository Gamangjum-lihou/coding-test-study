// 링크 : https://school.programmers.co.kr/learn/courses/30/lessons/17683#

/*
 * 강철원
 */

function solution(m, musicinfos) {
    const musicData = []
    
    musicinfos.forEach((musicinfo, index) => {
        const [startTime, endTime, title, score] = musicinfo.split(",")
        const playTime = calculatePlayTime(startTime, endTime)
        const melody = makeMelody(score, playTime)

        if(melody.includes(m)) {
            if(score.includes(m)) {
                musicData.push({
                    title,
                    playTime,
                    order : index
                })
            }else if(melody[melody.indexOf(m) + m.length] !== '#'){
                musicData.push({
                    title,
                    playTime,
                    order : index
                })
               }
        }
    })
   
    if(musicData.length === 0) {
        return "(None)"
    }
    
    if(musicData.length === 1) {
        return musicData[0].title
    }
    
    let answer = {} 
    musicData.forEach((data) => {
        if(data.playTime > answer.playTime || !answer.playTime) {
            answer = data
        }
        
        if(data.playTime === answer.playTime && data.order < answer.order) {
            answer = data
        }
    })

    return answer.title
}

function calculatePlayTime(start, end) {
    const [startHour, startMinute] = start.split(":")
    const [endHour, endMinute] = end.split(":")
    const playTime = ((endHour * 60) + endMinute) - ((startHour * 60) + startMinute)

    return Math.abs(playTime)
}

function makeMelody(score, playTime) {
    const melody = []
    let index = 0
    while(melody.length < playTime) {
        if(score[index % score.length + 1] === '#'){
            melody.push(score[index % score.length] + '#')
            index += 2
        }else{
            melody.push(score[index % score.length])
            index += 1
        }
    }
    return melody.join("")
}
/*
 * 이보리
 */

/*
 * 신현호
 */

